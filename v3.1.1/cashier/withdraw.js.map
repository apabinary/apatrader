{"version":3,"sources":["../../../../src/cashier/withdraw.es6"],"names":["require","win","win_view","error_handler","console","error","err","growl","message","Withdraw","init","li","click","Promise","all","cached","authorize","then","data","currency","local_storage","get","check_currency","_init_win","catch","moveToTop","root","i18n","createBlankWindow","title","resizable","collapsable","minimizable","maximizable","width","height","close","dialog","trigger","remove","open","destroy","unbind","_init_state","offset","top","my","left","at","css","fixFooterPosition","track","module_id","is_unique","state","clear","_","debounce","obj","prop","route","value","empty_fields","validate","token_length","show","invalid_length","invalid_text","length","verify","token","text","test","agent","instructions","menu","choice","code","disabled","transfer","account","amount","loginid","standard","url","iframe_visible","name","agents","commission","residence","checkAmount","e","scope","login_details","Cookies","loginids","reduce","a","b","id","routes","update","r","email","type","send","verify_email","notice","back","unlock","cashier","verification_code","startsWith","Error","init_win","iframe_loaded","onchanged","find","paymentagent_loginid","withdrawal_commission","amount_with_commission","with_commission","toFixed","confirm_transfer","request","paymentagent_withdraw","description","submit","req","transfer_between_accounts","account_from","account_to","get_settings","country_code","paymentagent_list","list","payout_currencies","bind"],"mappings":"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","file":"withdraw.js","sourcesContent":["/*\r\n * Created by amin on July 16, 2016.\r\n */\r\n\r\nimport $ from 'jquery';\r\nimport liveapi from 'websockets/binary_websockets';\r\nimport windows from 'windows/windows';\r\nimport rv from 'common/rivetsExtra';\r\nimport currencyDialog from 'cashier/currency';\r\nimport { debounce } from 'lodash'\r\nimport moment from 'moment';\r\nimport tncApprovalWin from 'cashier/uk_funds_protection';\r\nimport checkAccountStatus from 'shownotice/shownotice';\r\nimport html from 'text!cashier/withdraw.html';\r\n\r\nrequire(['text!cashier/withdraw.html']);\r\nrequire(['css!cashier/withdraw.css']);\r\nlet win = null;\r\nlet win_view = null;\r\n\r\nlet error_handler = err => {\r\n    console.error(err);\r\n    $.growl.error({ message: err.message });\r\n};\r\n\r\nclass Withdraw {\r\n    init = li => {\r\n        li.click(() => {\r\n            if (!win) {\r\n                Promise.all([liveapi.cached.authorize(), checkAccountStatus.init(\"withdrawal\")]).then(data => {\r\n                    if (!data[0].authorize.currency || !local_storage.get(\"currency\")) // if currency is not set ask for currency\r\n                        return currencyDialog.check_currency();\r\n                    return true; // OK\r\n                }).then(() => {\r\n                    this._init_win(html)\r\n                }).catch(error_handler);\r\n            } else\r\n                win.moveToTop();\r\n        });\r\n    }\r\n\r\n    _init_win = root => {\r\n        root = $(root).i18n();\r\n        win = windows.createBlankWindow(root, {\r\n            title: 'Withdraw funds',\r\n            resizable: true,\r\n            collapsable: false,\r\n            minimizable: true,\r\n            maximizable: true,\r\n            width: 700,\r\n            height: 400,\r\n            'data-authorized': true,\r\n            close: () => {\r\n                win.dialog('destroy');\r\n                win.trigger('dialogclose'); // TODO: figure out why event is not fired.\r\n                win.remove();\r\n                win = null;\r\n            },\r\n            open: () => {},\r\n            destroy: () => {\r\n                win_view && win_view.unbind();\r\n                win_view = null;\r\n            }\r\n        });\r\n\r\n        this._init_state(root);\r\n        win.dialog('open');\r\n\r\n        /* update dialog position, this way when dialog is resized it will not move*/\r\n        var offset = win.dialog('widget').offset();\r\n        offset.top = 110;\r\n        win.dialog(\"option\", \"position\", { my: offset.left, at: offset.top });\r\n        win.dialog('widget').css({\r\n            left: offset.left + 'px',\r\n            top: offset.top + 'px'\r\n        });\r\n        win.fixFooterPosition();\r\n        win.track({\r\n            module_id: 'withdraw',\r\n            is_unique: true\r\n        });\r\n    };\r\n\r\n    _init_state = root => {\r\n        var state = {\r\n            clear: _.debounce((obj, prop) => { obj[prop] = false }, 4000),\r\n            route: { value: 'menu' },\r\n            empty_fields: {\r\n                validate: false,\r\n                token_length: false,\r\n                show: () => {\r\n                    state.empty_fields.validate = true;\r\n                    state.clear(state.empty_fields, 'validate');\r\n                }\r\n            },\r\n            validate: {\r\n                invalid_length: false,\r\n                invalid_text: false,\r\n                length: () => {\r\n                    if (state.verify.token.length != 48) {\r\n                        state.validate.invalid_length = true;\r\n                        state.clear(state.validate, 'invalid_length');\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                },\r\n                text: () => {\r\n                    if (/[^1-9a-zA-Z'\\- ,.]/g.test(state.agent.instructions)) {\r\n                        state.validate.invalid_text = true;\r\n                        state.clear(state.validate, \"invalid_text\");\r\n                        return false;\r\n                    }\r\n                    return true;\r\n                }\r\n            },\r\n            menu: {\r\n                choice: ''\r\n            },\r\n            verify: {\r\n                token: '',\r\n                code: '',\r\n                disabled: false,\r\n            },\r\n            transfer: {\r\n                disabled: false,\r\n                account: '',\r\n                amount: '',\r\n                loginid: local_storage.get('authorize').loginid,\r\n            },\r\n            standard: {\r\n                url: '',\r\n                iframe_visible: false\r\n            },\r\n            agent: {\r\n                disabled: false,\r\n                loginid: '',\r\n                name: '',\r\n                agents: [],\r\n                commission: '',\r\n                amount: '',\r\n                currency: local_storage.get('authorize').currency,\r\n                residence: '',\r\n                instructions: '',\r\n                checkAmount: (e, scope) => {\r\n                    const amount = scope.agent.amount;\r\n                    if (amount == '') {\r\n                        return;\r\n                    }\r\n                    if (amount > 2000) {\r\n                        scope.agent.amount = 2000;\r\n                    }\r\n                    if (amount < 0) {\r\n                        scope.agent.amount = '';\r\n                    }\r\n                }\r\n            },\r\n            login_details: Cookies.loginids().reduce(function(a, b) {\r\n                if (a.id == local_storage.get(\"authorize\").loginid) return a;\r\n                else return b\r\n            })\r\n        };\r\n        let { route, menu, verify, empty_fields, standard, agent, transfer, validate } = state;\r\n\r\n        let routes = { menu: 400, verify: 400, transfer: 400, 'transfer-done': 300, standard: 400, agent: 550, 'agent-confirm': 400, 'agent-done': 300 };\r\n        route.update = r => {\r\n            route.value = r;\r\n            win.dialog('option', 'height', routes[r]);\r\n        };\r\n\r\n        menu.click = choice => { /* choice is 'transfer', 'agent' or 'standard' */\r\n            menu.choice = choice;\r\n            route.update(choice !== 'transfer' ? 'verify' : 'transfer');\r\n            if (choice === 'transfer')\r\n                return;\r\n            const email = local_storage.get('authorize').email;\r\n            const type = choice === 'agent' ? 'paymentagent_withdraw' : 'payment_withdraw';\r\n            liveapi.send({\r\n                    verify_email: email,\r\n                    type: type\r\n                })\r\n                .then(() => $.growl.notice({ message: 'Verification code sent to '.i18n() + email }))\r\n                .catch(err => {\r\n                    error_handler(err);\r\n                    route.update('menu');\r\n                });\r\n        };\r\n\r\n        verify.back = () => {\r\n            verify.token = verify.code = '';\r\n            route.update('menu');\r\n        };\r\n\r\n        verify.unlock = () => {\r\n            if (!verify.token) {\r\n                empty_fields.show();\r\n                return;\r\n            }\r\n\r\n            if (!validate.length()) {\r\n                return;\r\n            }\r\n\r\n            if (menu.choice === 'standard') {\r\n                verify.disabled = true;\r\n                liveapi.send({\r\n                        cashier: 'withdraw',\r\n                        verification_code: verify.token\r\n                    })\r\n                    .then(data => {\r\n                        if (data.cashier.startsWith('ASK_')) { /* error code */\r\n                            throw new Error(data.cashier);\r\n                        }\r\n                        standard.url = data.cashier;\r\n                        verify.disabled = false;\r\n                        route.update('standard');\r\n                        verify.code = verify.token;\r\n                        verify.token = '';\r\n                    })\r\n                    .catch(err => {\r\n                        verify.disabled = false;\r\n                        if (err.code === \"ASK_UK_FUNDS_PROTECTION\") {\r\n                            tncApprovalWin.init_win().then().catch(err => {\r\n                                error_handler(err);\r\n                            });\r\n                            return;\r\n                        }\r\n                        error_handler(err);\r\n                    });\r\n            } else if (menu.choice == 'agent') {\r\n                verify.code = verify.token;\r\n                verify.token = '';\r\n                route.update('agent');\r\n            }\r\n        };\r\n\r\n        standard.iframe_loaded = () => {\r\n            if (standard.url)\r\n                standard.iframe_visible = true;\r\n        };\r\n\r\n        agent.onchanged = () => {\r\n            if (agent.loginid) {\r\n                let { withdrawal_commission, name } = agent.agents.find(a => a.paymentagent_loginid == agent.loginid);\r\n                agent.commission = withdrawal_commission;\r\n                agent.name = name;\r\n            } else {\r\n                agent.commission = '';\r\n                agent.name = '';\r\n            }\r\n        }\r\n\r\n        agent.amount_with_commission = () => {\r\n            var with_commission = (agent.amount || 0) * (100 - agent.commission) / 100;\r\n            return with_commission.toFixed(2);\r\n        }\r\n\r\n        agent.click = () => {\r\n            if (!agent.loginid) {\r\n                $.growl.error({ message: 'Please select a payment agent'.i18n() });\r\n                return;\r\n            }\r\n            if (!(agent.amount >= 10 && agent.amount <= 2000)) {\r\n                $.growl.error({ message: 'Amount Min: 10 Max: 2000'.i18n() });\r\n                return;\r\n            }\r\n            if (agent.instructions && !validate.text()) {\r\n                return;\r\n            }\r\n\r\n            route.update('agent-confirm');\r\n        }\r\n\r\n        agent.confirm_transfer = () => {\r\n            var request = {\r\n                paymentagent_withdraw: 1,\r\n                paymentagent_loginid: agent.loginid,\r\n                currency: agent.currency,\r\n                amount: agent.amount * 1,\r\n                description: agent.instructions,\r\n                verification_code: verify.code\r\n            };\r\n            agent.disabled = true;\r\n            liveapi.send(request)\r\n                .then(data => {\r\n                    route.update('agent-done')\r\n                    agent.disabled = false;\r\n                })\r\n                .catch(err => {\r\n                    agent.disabled = false;\r\n                    route.update('menu') // because tokens are one time use.\r\n                    error_handler(err);\r\n                });\r\n        }\r\n\r\n        transfer.submit = () => {\r\n            if (transfer.account === '' || transfer.amount === '') {\r\n                empty_fields.show();\r\n                return;\r\n            }\r\n            var req = {\r\n                transfer_between_accounts: 1,\r\n                account_from: transfer.loginid,\r\n                account_to: transfer.account,\r\n                currency: agent.currency,\r\n                amount: transfer.amount\r\n            };\r\n            transfer.disabled = true;\r\n            liveapi.send(req)\r\n                .then(data => {\r\n                    if (data.transfer_between_accounts === 0) {\r\n                        $.growl.error({ message: 'Transfering funds between accounts failed'.i18n() });\r\n                        return;\r\n                    }\r\n                    route.update('transfer-done');\r\n                })\r\n                .catch(err => {\r\n                    error_handler(err);\r\n                    transfer.disabled = false;\r\n                });\r\n        }\r\n\r\n        liveapi.send({ get_settings: 1 })\r\n            .then(data => {\r\n                agent.residence = data.get_settings.country_code;\r\n                return liveapi.cached.send({ paymentagent_list: agent.residence });\r\n            })\r\n            .then(data => {\r\n                agent.agents = data.paymentagent_list.list;\r\n            })\r\n            .catch(error_handler);\r\n\r\n        liveapi.send({ payout_currencies: 1 })\r\n            .then(data => {\r\n                agent.currency = data.payout_currencies[0];\r\n            }).catch(err => console.error(err));\r\n\r\n        win_view = rv.bind(root[0], state);\r\n    };\r\n};\r\n\r\nexport default new Withdraw();\r\n"]}