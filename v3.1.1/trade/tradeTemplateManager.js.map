{"version":3,"sources":["../../../../src/trade/tradeTemplateManager.es6"],"names":["require","local_storage","get","set","TradeTemplateManager","root","dialog","_this","templates","forEach","tmpl","random","template_type","setRandom","state","init_state","append","html","i18n","view","bind","route","value","menu","array","save_as_value","rename_tmpl","rename_value","current","current_tmpl","get_template","findIndex","t","update","save_as","name","categories_value","capitalize","categoriy_displays_selected","save_changes","inx","push","growl","notice","message","open_file_selector","event","find","click","upload","file","target","files","reader","FileReader","onload","e","contents","result","data","JSON","parse","substring","replace","hash","isDuplicate","error","map","includes","apply","readAsText","preventDefault","set_template","download","json","stringify","console","log","download_file_in_browser","remove","filter","rename","do_rename","new_name","hide_template_menu","confirm","action","currentTarget","text","confirm_prevMenu","confirm_text","confirm_yes","confirm_no","hashCode","s","split","reduce","a","b","charCodeAt","tmpl_copy","unbind","init"],"mappings":"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","file":"tradeTemplateManager.js","sourcesContent":["/**\r\n * Created by amin on July 31, 2016.\r\n */\r\nimport $ from 'jquery';\r\nimport chartWindow from 'charts/chartWindow';\r\nimport rv from 'common/rivetsExtra';\r\nimport _ from 'lodash';\r\n\r\nrequire(['text!trade/tradeTemplateManager.html']);\r\n\r\nif(!local_storage.get('trade-templates')) {\r\n  local_storage.set('trade-templates', []);\r\n}\r\n\r\nclass TradeTemplateManager {\r\n  constructor(root, dialog) {\r\n    const _this = this;\r\n    const templates = local_storage.get(\"trade-templates\");\r\n    templates.forEach(function(tmpl){\r\n      if(!tmpl.random || !tmpl.template_type){\r\n        tmpl = _this.setRandom(tmpl);\r\n      }\r\n    });\r\n    local_storage.set(\"trade-templates\", templates);\r\n    const state = this.init_state(root, dialog);\r\n    require(['text!trade/tradeTemplateManager.html'], html => {\r\n      root.append(html.i18n());\r\n      this.view = rv.bind(root[0], state);\r\n    });\r\n  }\r\n\r\n  init_state(root, dialog) {\r\n    const state = {\r\n      route: { value: 'menu' },\r\n      menu: {\r\n      },\r\n      templates: {\r\n        array: local_storage.get('trade-templates'),\r\n        save_as_value: '',\r\n        rename_tmpl: null,\r\n        rename_value: '',\r\n        current: null,\r\n      }\r\n    };\r\n    const {route, templates, menu} = state;\r\n\r\n    /* persist applied templates between page reloads */\r\n    const current_tmpl = this.setRandom(dialog.get_template());\r\n    templates.array = local_storage.get(\"templates\");\r\n    if(_.findIndex(templates.array, t => t.random === current_tmpl.random) !== -1) {\r\n      templates.current = current_tmpl;\r\n    }\r\n\r\n    route.update = value => {\r\n      route.value = value;\r\n    };\r\n\r\n    menu.save_as = () => {\r\n      const tmpl = dialog.get_template();\r\n      tmpl.name = `${tmpl.categories_value} ${_.capitalize(tmpl.categoriy_displays_selected)}`;\r\n      templates.save_as_value = tmpl.name;\r\n      route.update('save-as');\r\n    }\r\n\r\n    menu.templates = () => {\r\n      templates.array = local_storage.get('trade-templates'); // it can be modified from other dialogs.\r\n      route.update('templates');\r\n    }\r\n\r\n    menu.save_changes = () => {\r\n      const current = this.setRandom(dialog.get_template());\r\n      const name = current.name;\r\n      const array = local_storage.get('trade-templates');\r\n      const inx = _.findIndex(array, t => t.name === name);\r\n      if(inx !== -1) {\r\n        array[inx] = current;\r\n      } else {\r\n        array.push(current);\r\n      }\r\n      local_storage.set('trade-templates', array);\r\n      templates.array = array;\r\n      templates.current = current;\r\n      $.growl.notice({message: 'Template changes saved '.i18n() + '(' + current.name + ')'});\r\n    }\r\n\r\n    menu.open_file_selector = (event) => {\r\n      $(root).find(\"input[type=file]\").click();\r\n    }\r\n\r\n    menu.upload = (event) => {\r\n      const _this = this;\r\n      const file = event.target.files[0];\r\n      event.target.value = null;\r\n      if(!file)\r\n        return;\r\n\r\n      const reader = new FileReader();\r\n      reader.onload = (e) => {\r\n        const contents = e.target.result;\r\n        const array = local_storage.get(\"trade-templates\");\r\n        let data = null;\r\n        try{\r\n          data = JSON.parse(contents);\r\n          data.name = data.name.substring(0,20).replace(/[<>]/g,\"-\");\r\n          const hash = data.random;\r\n          data = _this.setRandom(data);\r\n          if(hash !== data.random){\r\n            throw \"Invalid JSON file\".i18n();\r\n          }\r\n          if(_this.isDuplicate(data, array)){\r\n            return;\r\n          }\r\n          if(data.template_type !== 'trade-template') {\r\n            throw \"Invalid template type.\".i18n();\r\n          }\r\n        } catch(e){\r\n          $.growl.error({message:e});\r\n          return;\r\n        }\r\n\r\n        // Rename duplicate template names.\r\n        let file = 1,\r\n            name = data.name;\r\n        while(1){\r\n          if(array.map(t => t.name).includes(name)) {\r\n            name = data.name + \" (\" + file + \")\"\r\n            file++;\r\n            continue;\r\n          }\r\n          data.name = name;\r\n          break;\r\n        }\r\n\r\n        templates.apply(data);\r\n        array.push(data);\r\n        local_storage.set('trade-templates', array);\r\n        templates.array = array;\r\n        $.growl.notice({message: \"Successfully applied the template and saved it as \".i18n() + \"<b>\" + data.name + \"</b>\"});\r\n      }\r\n\r\n      reader.readAsText(file);\r\n    }\r\n\r\n    templates.save_as = (event) => {\r\n      event.preventDefault();\r\n      const name = templates.save_as_value.substring(0,20).replace(/[<>]/g,\"-\");\r\n      const tmpl = this.setRandom(dialog.get_template());\r\n      if(tmpl) {\r\n        tmpl.name = name;\r\n        const array = local_storage.get('trade-templates');\r\n        if(array.map(t => t.name).includes(name)) {\r\n          $.growl.error({message: 'Template name already exists'.i18n() });\r\n          return;\r\n        }\r\n\r\n        if(this.isDuplicate(tmpl, array)){\r\n          return;\r\n        }\r\n        array.push(tmpl);\r\n        templates.current = tmpl;\r\n        local_storage.set('trade-templates', array);\r\n        templates.array = array;\r\n        route.update('menu');\r\n        dialog.set_template(tmpl);\r\n      }\r\n    }\r\n\r\n    templates.download = (tmpl) => {\r\n      var json = JSON.stringify(tmpl);\r\n      console.log(tmpl);\r\n      download_file_in_browser(tmpl.name + '.json', 'text/json;charset=utf-8;', json);\r\n      $.growl.notice({message: \"Downloading template as <b>\".i18n() + tmpl.name + \".json</b>\"});\r\n    }\r\n\r\n    templates.remove = (tmpl) => {\r\n      let array = local_storage.get('trade-templates');\r\n      templates.array = array.filter(t => t.name !== tmpl.name);\r\n      local_storage.set('trade-templates', templates.array);\r\n      if(templates.current && tmpl.name === templates.current.name) {\r\n        templates.current = null;\r\n      }\r\n    }\r\n\r\n    templates.rename = tmpl => {\r\n      templates.rename_value = tmpl.name;\r\n      templates.rename_tmpl = tmpl;\r\n      route.update('rename');\r\n    }\r\n\r\n    templates.do_rename = (event) => {\r\n      event.preventDefault();\r\n      const name = templates.rename_tmpl.name;\r\n      const new_name = templates.rename_value.substring(0,20).replace(/[<>]/g,\"-\");\r\n      const array = local_storage.get('trade-templates');\r\n      if(array.map(t => t.name).includes(new_name)) {\r\n          $.growl.error({message: 'Template name already exists'.i18n() });\r\n          return;\r\n      };\r\n      const tmpl = array.find(t => t.name === name);\r\n      if(tmpl) {\r\n        tmpl.name = new_name;\r\n        local_storage.set('trade-templates', array);\r\n        templates.array = array;\r\n        route.update('templates');\r\n\r\n        /* update template name in current dialog */\r\n        const current = this.setRandom(dialog.get_template());\r\n        if(current.random == tmpl.random) {\r\n          current.name = new_name\r\n          dialog.set_template(current);\r\n          templates.current = current;\r\n        }\r\n      }\r\n    }\r\n\r\n    templates.apply = tmpl => {\r\n      dialog.set_template(tmpl);\r\n      templates.current = tmpl;\r\n      route.update('menu');\r\n      dialog.hide_template_menu();\r\n    }\r\n\r\n    templates.confirm = (tmpl, event) => {\r\n      route.update(\"confirm\");\r\n      const action = event.currentTarget.text;\r\n      templates.confirm_prevMenu = action === \"Delete\".i18n() ? \"templates\" : \"menu\";\r\n      templates.confirm_text = action === \"Delete\".i18n() ? \"Are you sure you want to delete template?\".i18n() : \"Are you sure you want to overwrite current template?\".i18n();\r\n\r\n      templates.confirm_yes = () => {\r\n        if(action === \"Delete\".i18n()) {\r\n          templates.remove(tmpl)\r\n          if(templates.current === tmpl)\r\n            templates.current = null;\r\n        }\r\n        else {\r\n          menu.save_changes();\r\n        }\r\n        templates.confirm_no();\r\n      }\r\n\r\n      templates.confirm_no = () => {\r\n        route.update(templates.confirm_prevMenu);\r\n      }\r\n    }\r\n\r\n    return state;\r\n  }\r\n\r\n  setRandom(tmpl) {\r\n    const name = tmpl.name;\r\n    delete tmpl.name;\r\n    delete tmpl.random;\r\n    tmpl.template_type = 'trade-template';\r\n    tmpl.random = this.hashCode(JSON.stringify(tmpl));\r\n    tmpl.name = name;\r\n    return tmpl;\r\n  }\r\n\r\n  hashCode(s) {\r\n    return s.split(\"\").reduce(function(a,b){a=((a<<5)-a)+b.charCodeAt(0);return a&a},0);\r\n  }\r\n\r\n  isDuplicate(tmpl, array){\r\n    // get template with same values.\r\n    const tmpl_copy = _.find(array, ['random', tmpl.random]);\r\n    if(tmpl_copy){\r\n      $.growl.error({message: 'Template already saved as '.i18n() +'<b>' + tmpl_copy.name + '</b>.'});\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n\r\n  unbind() {\r\n    this.view && this.view.unbind();\r\n    this.view = null;\r\n  }\r\n}\r\n\r\nexport const init = (root, dialog) => new TradeTemplateManager(root, dialog);\r\nexport default { init, };\r\n"]}